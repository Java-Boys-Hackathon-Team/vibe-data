spring.application.name=vibe-data

#Datasource configuration (Primary: Postgres)
spring.datasource.url=jdbc:postgresql://localhost:25436/vibedata
spring.datasource.username=pgadmin
spring.datasource.password=pgadmin
spring.datasource.driver-class-name=org.postgresql.Driver
spring.liquibase.change-log=classpath:/db/changelog/db.changelog-master.xml

# Secondary DataSource: Trino (for read-only analytics via JdbcTemplate)
spring.datasource.trino.driver-class-name=io.trino.jdbc.TrinoDriver
spring.datasource.trino.url=jdbc:trino://trino.czxqx2r9.data.bizmrg.com:443?user=hackuser&password=dovq(ozaq8ngt)oS
spring.datasource.trino.hikari.read-only=true
# Query timeout for Trino JdbcTemplate in seconds; configurable via env var TRINO_QUERY_TIMEOUT, defaults to 20s
spring.jdbc.template.trino.query-timeout=${TRINO_QUERY_TIMEOUT:20}

spring.datasource.trino-local.driver-class-name=io.trino.jdbc.TrinoDriver
spring.datasource.trino-local.url=jdbc:trino://localhost:18080/iceberg
spring.datasource.trino-local.username=app
spring.datasource.trino-local.password=

trino.local.catalog=iceberg

validation.max-attempts=${VALIDATION_MAX_ATTEMPTS:3}
validation.enabled: ${VALIDATION_ENABLED:true}

spring.datasource.trino-local.hikari.maximum-pool-size=5
spring.datasource.trino-local.hikari.minimum-idle=1
spring.datasource.trino-local.hikari.read-only=false
spring.datasource.trino-local.hikari.connection-timeout=30000
spring.datasource.trino-local.hikari.idle-timeout=60000

#Actuator configuration
management.endpoints.web.exposure.include=health,info

# Spring AI
spring.ai.openai.api-key=${OPENAI_API_KEY}
spring.ai.openai.chat.options.model=gpt-4o
spring.ai.openai.chat.options.temperature=0.2
#logging.level.org.springframework.ai.chat.client.advisor=DEBUG
logging.level.org.springframework.ai=DEBUG
spring.ai.chat.memory.repository.jdbc.initialize-schema=always
spring.ai.chat.observations.log-prompt=true
spring.ai.chat.observations.log-completion=true
spring.ai.tools.observations.include-content=true

# Basic Auth credentials (can be overridden by environment variables)
security.basic.username=${BASIC_AUTH_USERNAME}
security.basic.password=${BASIC_AUTH_PASSWORD}

# Custom LLM
llm.llm-model=gpt-4o
llm.temperature=0.5
llm.valid-models=gpt-4o,gpt-4o-mini,gpt-4.1,gpt-5
# Timeout for LLM requests in seconds (default 60)
llm.timeout-seconds=${LLM_TIMEOUT_SECONDS:60}

# --- Spring Cache ---
spring.cache.type=redis
spring.cache.redis.time-to-live=2h
spring.cache.redis.cache-null-values=false

# --- Redis Connection ---
spring.data.redis.host=localhost
spring.data.redis.port=26379
spring.data.redis.password=redisadmin
spring.data.redis.timeout=3s

# --- Redis Connection Pool (Lettuce) ---
spring.data.redis.lettuce.pool.max-active=16
spring.data.redis.lettuce.pool.max-idle=8
spring.data.redis.lettuce.pool.min-idle=0
spring.data.redis.lettuce.pool.max-wait=5s

# --- Processing time budget ---
# Maximum total allowed duration for the end-to-end optimization workflow (milliseconds)
processing.max-total-duration-ms=${PROCESSING_MAX_TOTAL_MS:1200000}
# Default average time for a single LLM request (milliseconds), used until enough stats are collected
processing.default-llm-avg-ms=${PROCESSING_DEFAULT_LLM_MS:40000}
